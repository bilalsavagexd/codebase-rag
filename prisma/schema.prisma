generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  imageUrl      String?
  firstName     String?
  lastName      String?
  emailAddress  String          @unique
  credits       Int             @default(150)

  // Relations
  userToProjects UserToProject[]
}

model Project {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String
  githubUrl     String
  deletedAt     DateTime?

  // Relations
  userToProjects UserToProject[]
  commits        Commit[]
}

model UserToProject {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  userId        String    
  projectId     String

  // Relations
  user          User            @relation(fields: [userId], references: [id])
  project       Project         @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
}

model SourceCodeEmbedding {
   id              String    @id @default(uuid())

   summaryEmbedding Unsupported("vector(768)")?
   sourceCode      String
   fileName        String 
   summary         String

   projectId       String
   project         Project   @relation(fields: [projectId], references: [id])
}

model Commit {
  id                 String      @id @default(cuid())
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt

  projectId          String
  project            Project     @relation(fields: [projectId], references: [id])

  commitMessage      String
  commitHash         String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime
  
  summary            String      // AI summary
}